{
  "version": 3,
  "sources": ["../../../app/components/modal.component.jsx"],
  "sourcesContent": ["import styles from '../styles/modal.styles.css';\nimport ProgressiveImg from './progressiveImage.component';\n\nconst Modal = (props) => {\n\n  const onClose = props.onClose;\n\n  if (props.data && props.data != '') {\n    const data = props.data;\n    const images = data.images;\n    const descr = data.description;\n    const hero = data.hero;\n\n    return (\n      <div className={\"modalBackground \" + props.className} style={{ backgroundColor: props.color }}>\n            <div className='modalContain'>\n                <button onClick={onClose} className=\"buttonModal\">x</button>\n                <div className='modalImageContain'>\n                {data.hero && data.heroAlsoFirstImage ?\n            <>\n                <ProgressiveImg\n                key={hero.image}\n                src={hero.image}\n                placeholderSrc={hero.placeholder}\n                classTitle='brandImage'\n                alt={hero.alt} />\n                              \n                    </> :\n            <></>}\n\n                {data.noBreakdown ?\n\n            <p className='descrText'>{data.shortDescription}</p> :\n\n            <div className='breakdown'>\n                            <h2>{data.name}</h2>\n                            {data.breakdown.map((item) =>\n              <div className='breakdownBox'>\n                                    <div className='breakdownTitle'>\n                                        <h3>{item.title}</h3>\n                                    </div>\n                                    <div className='breakdownText'>\n                                        <p>{item.text}</p>\n                                    </div>\n                                </div>\n              )}\n\n                            \n                        </div>}\n\n\n                {images.map((image) =>\n            <ProgressiveImg\n              key={image.image}\n              src={image.image}\n              placeholderSrc={image.placeholder}\n              classTitle={\n              image.size === 'small' ? `secondaryImage` : image.size === 'mid' ? 'midImage' : `brandImage`}\n\n              alt={image.alt} />\n\n            )}\n                </div>\n            </div>\n            </div>);\n\n  }\n\n};\n\nexport default Modal;\n\nexport const links = () => [\n{ rel: \"stylesheet\", href: styles }];"],
  "mappings": ";;;;;;;;;;;;AAgBgB;AAbhB,IAAM,QAAQ,CAAC,UAAU;AAEvB,QAAM,UAAU,MAAM;AAEtB,MAAI,MAAM,QAAQ,MAAM,QAAQ,IAAI;AAClC,UAAM,OAAO,MAAM;AACnB,UAAM,SAAS,KAAK;AACpB,UAAM,QAAQ,KAAK;AACnB,UAAM,OAAO,KAAK;AAElB,WACE,mDAAC,SAAI,WAAW,qBAAqB,MAAM,WAAW,OAAO,EAAE,iBAAiB,MAAM,MAAM,GACtF,6DAAC,SAAI,WAAU,gBACX;AAAA,yDAAC,YAAO,SAAS,SAAS,WAAU,eAAc,iBAAlD;AAAA;AAAA;AAAA;AAAA,aAAmD;AAAA,MACnD,mDAAC,SAAI,WAAU,qBACd;AAAA,aAAK,QAAQ,KAAK,qBACvB,sFACI;AAAA,UAAC;AAAA;AAAA,YAED,KAAK,KAAK;AAAA,YACV,gBAAgB,KAAK;AAAA,YACrB,YAAW;AAAA,YACX,KAAK,KAAK;AAAA;AAAA,UAJL,KAAK;AAAA,UADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAKe,KANnB;AAAA;AAAA;AAAA;AAAA,eAQQ,IACR;AAAA;AAAA;AAAA;AAAA,eAAE;AAAA,QAEG,KAAK,cAEV,mDAAC,OAAE,WAAU,aAAa,eAAK,oBAA/B;AAAA;AAAA;AAAA;AAAA,eAAgD,IAEhD,mDAAC,SAAI,WAAU,aACC;AAAA,6DAAC,QAAI,eAAK,QAAV;AAAA;AAAA;AAAA;AAAA,iBAAe;AAAA,UACd,KAAK,UAAU;AAAA,YAAI,CAAC,SACnC,mDAAC,SAAI,WAAU,gBACO;AAAA,iEAAC,SAAI,WAAU,kBACX,6DAAC,QAAI,eAAK,SAAV;AAAA;AAAA;AAAA;AAAA,qBAAgB,KADpB;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,cACA,mDAAC,SAAI,WAAU,iBACX,6DAAC,OAAG,eAAK,QAAT;AAAA;AAAA;AAAA;AAAA,qBAAc,KADlB;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA,iBANtB;AAAA;AAAA;AAAA;AAAA,mBAOkB;AAAA,UAClB;AAAA,aAXF;AAAA;AAAA;AAAA;AAAA,eAcY;AAAA,QAGP,OAAO;AAAA,UAAI,CAAC,UACjB;AAAA,YAAC;AAAA;AAAA,cAEC,KAAK,MAAM;AAAA,cACX,gBAAgB,MAAM;AAAA,cACtB,YACA,MAAM,SAAS,UAAU,mBAAmB,MAAM,SAAS,QAAQ,aAAa;AAAA,cAEhF,KAAK,MAAM;AAAA;AAAA,YANN,MAAM;AAAA,YADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOkB;AAAA,QAElB;AAAA,WA5CI;AAAA;AAAA;AAAA;AAAA,aA6CA;AAAA,SA/CJ;AAAA;AAAA;AAAA;AAAA,WAgDA,KAjDN;AAAA;AAAA;AAAA;AAAA,WAkDM;AAAA,EAEV;AAEF;AAEA,IAAO,0BAAQ;AAER,IAAM,QAAQ,MAAM;AAAA,EAC3B,EAAE,KAAK,cAAc,MAAM,qBAAO;AAAC;",
  "names": []
}
